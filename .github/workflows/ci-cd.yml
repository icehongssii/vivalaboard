name: Python application CI

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:

  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: 
          python -m pip install --upgrade pip
          pip install poetry
      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install
      - name: code-quality check
        run: |
          poetry run flake . 
          poetry run isort . --check-only
      - uses: psf/black@stable
        name: black
        with:
          options: "--check --verbose"
          src: "."
          use_pyproject: true                  
      - name: Test and coverage
        run: |
          poetry run python -m pytest --junitxml=report.xml --cov=./ --cov-report=xml tests/
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          files: ./report.xml
          fail_ci_if_error: true